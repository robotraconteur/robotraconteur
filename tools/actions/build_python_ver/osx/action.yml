name: rr_build_python_ver_osx
description: rr_build_python_ver_osx
inputs:
  python_version:
    description: python_version
    required: true
  arch:
    description: arch
    required: true

runs:
  using: "composite"
  steps:
  - uses: actions/setup-python@v5
    id: python3
    with:
      python-version: '${{ inputs.python_version }}'
      architecture: ${{ inputs.arch }}
  - name: pip3
    run: |
      python -m pip install numpy setuptools wheel pytest
    shell: bash
  - name: env args
    if: ${{ inputs.arch == 'x64' }}
    run: |
      echo "CMAKE_PYACT_EXTRA_ARGS=-DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 -DPYTHON3_WHEEL_EXTRA_ARGS='--plat-name=macosx-10.9-x86_64' -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl" >> $GITHUB_ENV
    shell: bash
  - name: env args
    if: ${{ inputs.arch == 'arm64' }}
    run: |
      echo "CMAKE_PYACT_EXTRA_ARGS=-DCMAKE_OSX_DEPLOYMENT_TARGET=12.0 -DPYTHON3_WHEEL_EXTRA_ARGS='--plat-name=macosx-12.0-arm64' -DOPENSSL_ROOT_DIR=/opt/homebrew/opt/openssl" >> $GITHUB_ENV
    shell: bash
  - name: configure
    run: >
      cmake -G "Unix Makefiles"
      -DBoost_USE_STATIC_LIBS=ON -DBUILD_DOCUMENTATION=OFF
      -DBUILD_CORE=OFF -DBUILD_GEN=OFF
      -DRobotRaconteur_DIR=${{ github.workspace }}/build2
      -DBUILD_PYTHON3=ON -DBUILD_PYTHON3_WHEEL=ON
      -DBUILD_TESTING=ON
      -DPYTHON3_EXECUTABLE="${{ steps.python3.outputs.python-path }}"
      -DROBOTRACONTEUR_VERSION_SEMVER="${{ env.ROBOTRACONTEUR_SEMVER }}"
      ${{ env.CMAKE_CACHE_ARGS }}
      -DCMAKE_BUILD_TYPE=Release
      -S robotraconteur -B build2_python_${{ inputs.python_version }}
      ${{ env.CMAKE_PYACT_EXTRA_ARGS }}
    shell: bash
  - name: build
    working-directory: build2_python_${{ inputs.python_version }}
    run: |
      cmake --build . --config Release -j 4
    shell: bash
  - name: test
    working-directory: build2_python_${{ inputs.python_version }}
    run: |
      ctest . -C Release --output-on-failure
    shell: bash
  - name: delocate pip
    shell: bash
    run: |
      python -m pip install delocate
      delocate-wheel -v build2_python_${{ inputs.python_version }}/out/Python3/dist/*.whl
  - name: copy wheels
    shell: bash
    run: |
      mkdir -p build2/out/wheels/
      cp build2_python_${{ inputs.python_version }}/out/Python3/dist/*.whl build2/out/wheels/
