name: CI

on:
  push:
    branches-ignore:
      - ros-**
      - ros2-**
    tags:
      - v*
  pull_request:
    branches-ignore:
      - ros-**
      - ros2-**
  release:
    types:
      - created
  schedule:
    - cron: '0 5 * * *'

  workflow_dispatch:

env:
  VCPKG_PKGS: >-
    boost-algorithm boost-array boost-asio 
    boost-assign boost-atomic boost-bind boost-config boost-container boost-date-time 
    boost-smart-ptr boost-filesystem boost-foreach boost-format boost-function boost-interprocess
    boost-intrusive boost-lexical-cast boost-locale boost-random boost-range boost-regex
    boost-scope-exit boost-signals2 boost-thread boost-tuple boost-unordered 
    boost-utility boost-uuid boost-program-options gtest openssl
    


jobs:
  build-ubuntu:

    runs-on: ${{ matrix.config.runs_on }}
    container: ${{ matrix.config.container }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - os: ubuntu-18.04
          runs_on: ubuntu-latest
          container: ubuntu:bionic
        - os: ubuntu-20.04
          runs_on: ubuntu-20.04
          container: ""
        - os: ubuntu-22.04
          runs_on: ubuntu-22.04
          container: ""
        - os: ubuntu-16.04
          runs_on: ubuntu-latest
          container: ubuntu:xenial
        - os: debian-10
          runs_on: ubuntu-latest
          container: debian:buster-slim
        - os: debian-11
          runs_on: ubuntu-latest
          container: debian:bullseye-slim
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: install sudo and tzdata
      if: ${{ matrix.config.container != '' }}
      run: |
        apt update 
        apt install sudo tzdata python3 -y
        ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
        dpkg-reconfigure --frontend noninteractive tzdata
        apt install ca-certificates-java -y
    - name: semver
      run: python3 robotraconteur/packaging/scripts/actions_semver.py --github-env
    - name: apt update
      run: sudo apt update
    - name: apt
      run: >
        sudo apt-get install default-jdk default-jdk-headless default-jre default-jre-headless 
        zlib1g zlib1g-dev libssl-dev libusb-1.0-0
        libusb-1.0-0-dev libdbus-1-3 libdbus-1-dev libbluetooth3 libbluetooth-dev zlib1g zlib1g-dev 
        git cmake g++ make libboost-all-dev autoconf 
        automake libtool bison libpcre3-dev python3-dev python3-numpy python3-setuptools python3-wheel 
        python3-pytest mono-devel curl libgtest-dev -qq
    - name: apt python2.7
      if: ${{ matrix.config.os != 'ubuntu-22.04' && matrix.config.os != 'debian-11' }}
      run: >
        sudo apt-get install python-dev python-numpy python-setuptools python-pytest -qq
    - name: install gtest
      if: ${{ matrix.config.os == 'ubuntu-16.04' || matrix.config.os == 'ubuntu-18.04' }}
      run: |
        git clone https://github.com/google/googletest
        cd googletest
        git checkout release-1.8.1
        cmake -DCMAKE_CXX_FLAGS="-fPIC" .
        cmake --build .
        sudo cmake --build . --target install
    - name: build-swig
      if: ${{ matrix.config.os != 'ubuntu-22.04' && matrix.config.os != 'debian-11' }}
      uses: johnwason/swig-build-action@v1
      with:
        cache-key: ${{ matrix.config.os }}
    - name: apt-swig
      if: ${{ matrix.config.os == 'ubuntu-22.04' || matrix.config.os == 'debian-11' }}
      run: sudo apt-get install swig -qq -y
    - name: cache-build
      if: startsWith(github.ref, 'refs/tags/v') != true
      id: cache-build
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ runner.os }}-${{ matrix.config.os }}-build-main-ccache
    - name: cmake cache args
      id: cmake-cache-args
      if: startsWith(github.ref, 'refs/tags/v') != true
      run: >
        echo "CMAKE_CACHE_ARGS=-DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON" >> $GITHUB_ENV
    - name: mkdir build2
      run: mkdir -p build2
    - name: configure
      working-directory: build2
      run: >
        cmake -G "Unix Makefiles" -DBUILD_GEN=ON  -DBUILD_TESTING=ON -DBUILD_PYTHON3=ON -DBUILD_PYTHON3_WHEEL=ON 
        -DBoost_USE_STATIC_LIBS=OFF -DCMAKE_BUILD_TYPE=Release -DPYTHON3_EXECUTABLE=/usr/bin/python3 
        -DBUILD_JAVA=ON -DBUILD_NET=ON -DPACKAGE_SWIG_SOURCE_ALL=ON -DJAVA_HOME=/usr/lib/jvm/default-java 
        -DBUILD_PYTHON_WHEEL=OFF
        -DROBOTRACONTEUR_VERSION_SEMVER="${{ env.ROBOTRACONTEUR_SEMVER }}"
        ${{ env.CMAKE_CACHE_ARGS }}
        ../robotraconteur
    - name: configure python2.7
      if: ${{ matrix.config.os != 'ubuntu-22.04' && matrix.config.os != 'debian-11' }}
      working-directory: build2
      run: cmake . -DBUILD_PYTHON=ON
    - name: build
      working-directory: build2
      run: |
        cmake --build . --config Release -- -j 4
    - name: build source
      working-directory: build2
      run: |
        cmake --build . --config Release --target package_source || true
        mv generated_src out/
        cp *.tar.gz out/ || true
        cp *.zip out/ || true
    - name: test
      if: ${{ matrix.config.container == '' }}
      working-directory: build2
      run: |
        ctest . -C Release --output-on-failure
    - name: test
      if: ${{ matrix.config.container != '' }}
      working-directory: build2
      run: |
        ctest . -C Release -E "robotraconteur_test_discovery_loopback|RobotRaconteurService.DiscoveryLoopback" --output-on-failure
    - name: python 3.7
      if: ${{ matrix.config.os == 'ubuntu-20.04' }}
      uses: ./robotraconteur/tools/actions/build_python_ver/linux
      with:
        python_version: 3.7
        arch: x64
    - name: python 3.8
      if: ${{ matrix.config.os == 'ubuntu-20.04' }}
      uses: ./robotraconteur/tools/actions/build_python_ver/linux
      with:
        python_version: 3.8
        arch: x64
    - name: python 3.9
      if: ${{ matrix.config.os == 'ubuntu-20.04' }}
      uses: ./robotraconteur/tools/actions/build_python_ver/linux
      with:
        python_version: 3.9
        arch: x64
    - name: python 3.10
      if: ${{ matrix.config.os == 'ubuntu-20.04' }}
      uses: ./robotraconteur/tools/actions/build_python_ver/linux
      with:
        python_version: "3.10"
        arch: x64
    - name: python 3.11
      if: ${{ matrix.config.os == 'ubuntu-20.04' }}
      uses: ./robotraconteur/tools/actions/build_python_ver/linux
      with:
        python_version: "3.11"
        arch: x64
    - name: python 3.12
      if: ${{ matrix.config.os == 'ubuntu-20.04' }}
      uses: ./robotraconteur/tools/actions/build_python_ver/linux
      with:
        python_version: "3.12"
        arch: x64
    - name: move out
      run: |
        cp build2/rrversion.txt build2/out/
        cp robotraconteur/LICENSE.txt build2/out/
        mv build2/out .
    - name: archive out
      uses: actions/upload-artifact@v3
      with:
        name: 'out-${{ matrix.config.os }}'
        path: out/*
    - name: build artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: 'build-artifacts-${{ matrix.config.os }}'
        path: build2/*
        retention-days: 2
  build-win:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        config:
          - arch: x64
            vcpkg_triplet: x64-windows-static-md-release
            cmake_arch: x64
          - arch: x86
            vcpkg_triplet: x86-windows-static-md-release
            cmake_arch: Win32
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: semver
      run: python robotraconteur/packaging/scripts/actions_semver.py --github-env
    - name: vcpkg build
      uses: johnwason/vcpkg-action@v5
      id: vcpkg
      with:
        pkgs: ${{ env.VCPKG_PKGS }}
        triplet: ${{ matrix.config.vcpkg_triplet }}
        extra-args: --clean-after-build --overlay-triplets=${{ github.workspace }}/robotraconteur/tools/build_files/triplets
        cache-key: ${{ runner.os }}-${{ matrix.config.arch }}-build-main
        token: ${{ github.token }}
    - uses: actions/setup-java@v1
      with:
        java-version: 8
        java-package: jdk
        architecture: ${{ matrix.config.arch }}
    - name: choco python2.7
      run: |
        choco install python2 ${{ matrix.config.arch == 'x86' && '-x86' || '' }} -r
    - name: pip
      run: |
        C:\python27\python -m pip install --upgrade pip
        C:\python27\python -m pip install numpy setuptools wheel pytest
    - uses: actions/setup-python@v4
      id: python3
      with:
        python-version: '3.8'
        architecture: ${{ matrix.config.arch }}
    - name: pip3
      run: |
        python -m pip install numpy setuptools wheel pytest
    - name: choco
      run: |
        choco install swig -r
    - name: cache-build
      if: startsWith(github.ref, 'refs/tags/v') != true
      id: cache-build
      uses: mikehardy/buildcache-action@v1
      with:
        cache_key: ${{ runner.os }}-${{ matrix.config.arch }}-build-main-buildcache
    - name: cmake cache args
      id: cmake-cache-args
      if: startsWith(github.ref, 'refs/tags/v') != true
      run: >
        echo "CMAKE_CACHE_ARGS=-DCMAKE_C_COMPILER_LAUNCHER=buildcache -DCMAKE_CXX_COMPILER_LAUNCHER=buildcache
        -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON" | Out-File -FilePath $env:GITHUB_ENV 
        -Encoding utf8 -Append
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.config.arch }}
    - name: configure
      run: >
        cmake -G "Ninja" -DBUILD_GEN=ON -DBUILD_TESTING=ON 
        -DBUILD_NET=ON -DBoost_USE_STATIC_LIBS=ON -DBUILD_PYTHON=ON 
        -DBUILD_PYTHON_WHEEL=ON -DBUILD_PYTHON3=ON -DBUILD_PYTHON3_WHEEL=ON -DBUILD_JAVA=ON 
        -DPYTHON_EXECUTABLE="C:/python27/python.exe"
        -DPYTHON3_EXECUTABLE="${{ steps.python3.outputs.python-path }}" 
        -DROBOTRACONTEUR_VERSION_SEMVER="${{ env.ROBOTRACONTEUR_SEMVER }}"
        ${{ steps.vcpkg.outputs.vcpkg-cmake-config }}
        ${{ env.CMAKE_CACHE_ARGS }}
        -DCMAKE_BUILD_TYPE=Release
        -S robotraconteur -B build2
    - name: build
      working-directory: build2
      run: |
        cmake --build . --config Release -j 4
    - name: test
      if: ${{ matrix.config.arch != 'x86' }}
      working-directory: build2
      run: |
        ctest . -C Release --output-on-failure
    - name: test x86
      if: ${{ matrix.config.arch == 'x86' }}
      working-directory: build2
      run: |
        ctest . -C Release --output-on-failure -E java
    - name: python 3.6
      uses: ./robotraconteur/tools/actions/build_python_ver/win
      with:
        python_version: 3.6
        arch: ${{ matrix.config.arch }}
        vcpkg_triplet: ${{ matrix.config.vcpkg_triplet }}
    - name: python 3.7
      uses: ./robotraconteur/tools/actions/build_python_ver/win
      with:
        python_version: 3.7
        arch: ${{ matrix.config.arch }}
        vcpkg_triplet: ${{ matrix.config.vcpkg_triplet }}
    - name: python 3.8
      uses: ./robotraconteur/tools/actions/build_python_ver/win
      with:
        python_version: 3.8
        arch: ${{ matrix.config.arch }}
        vcpkg_triplet: ${{ matrix.config.vcpkg_triplet }}
    - name: python 3.9
      uses: ./robotraconteur/tools/actions/build_python_ver/win
      with:
        python_version: 3.9
        arch: ${{ matrix.config.arch }}
        vcpkg_triplet: ${{ matrix.config.vcpkg_triplet }}
    - name: python 3.10
      uses: ./robotraconteur/tools/actions/build_python_ver/win
      with:
        python_version: "3.10"
        arch: ${{ matrix.config.arch }}
        vcpkg_triplet: ${{ matrix.config.vcpkg_triplet }}
    - name: python 3.11
      uses: ./robotraconteur/tools/actions/build_python_ver/win
      with:
        python_version: "3.11"
        arch: ${{ matrix.config.arch }}
        vcpkg_triplet: ${{ matrix.config.vcpkg_triplet }}
    - name: python 3.12
      uses: ./robotraconteur/tools/actions/build_python_ver/win
      with:
        python_version: "3.12"
        arch: ${{ matrix.config.arch }}
        vcpkg_triplet: ${{ matrix.config.vcpkg_triplet }}
    - name: move out
      run: |
        copy build2/rrversion.txt build2/out/
        copy robotraconteur/LICENSE.txt build2/out/
        mv build2/out .
    - name: archive out
      uses: actions/upload-artifact@v3
      with:
        name: 'out-win-${{ matrix.config.arch }}'
        path: out/*
    - name: build artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: 'build-artifacts-win-${{ matrix.config.arch }}'
        path: build2/*
        retention-days: 2  
  
  build-win-shared:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: vcpkg build
      uses: johnwason/vcpkg-action@v5
      id: vcpkg
      with:
        pkgs: ${{ env.VCPKG_PKGS }}
        triplet: x64-windows-release
        extra-args: --clean-after-build
        cache-key: win-shared-build-main
        token: ${{ github.token }}
    - name: cache-build
      if: startsWith(github.ref, 'refs/tags/v') != true
      id: cache-build
      uses: mikehardy/buildcache-action@v1
      with:
        cache_key: win64-shared-build-main-buildcache
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    - name: configure
      run: >
        cmake -G "Ninja" -DBUILD_GEN=ON -DBUILD_TESTING=ON 
        -DBUILD_NET=OFF -DBoost_USE_STATIC_LIBS=OFF -DBUILD_PYTHON=OFF
        -DBUILD_PYTHON3=OFF  -DBUILD_JAVA=OFF 
        ${{ steps.vcpkg.outputs.vcpkg-cmake-config }}
        ${{ env.CMAKE_CACHE_ARGS }}
        -DCMAKE_BUILD_TYPE=Release
        -S robotraconteur -B build2
    - name: build
      working-directory: build2
      run: |
        cmake --build . --config Release -j 4
    - name: test
      working-directory: build2
      run: |
        ctest . -C Release --output-on-failure
    - name: build artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: 'build-artifacts-win-shared'
        path: build2/*
        retention-days: 2 

  build-osx:

    runs-on: macos-12
    env:
      LIBRARY_PATH: /usr/local/opt/icu4c/lib
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: semver
      run: python3 robotraconteur/packaging/scripts/actions_semver.py --github-env
    - name: brew
      run: |
        brew install swig boost openssl googletest
    - uses: actions/setup-python@v4
      id: python3
      with:
        python-version: '3.8'
        architecture: x64
    - name: pip3
      run: |
        python -m pip install numpy setuptools wheel pytest
    - name: cache-build
      if: startsWith(github.ref, 'refs/tags/v') != true
      id: cache-build
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ runner.os }}-build-main-ccache
    - name: cmake cache args
      id: cmake-cache-args
      if: startsWith(github.ref, 'refs/tags/v') != true
      run: >
        echo "CMAKE_CACHE_ARGS=-DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON" >> $GITHUB_ENV
    - name: configure
      run: >
        cmake -G "Unix Makefiles" -DBUILD_GEN=ON  -DBUILD_TESTING=ON -DBUILD_PYTHON3=ON -DBUILD_PYTHON3_WHEEL=OFF 
        -DBoost_USE_STATIC_LIBS=ON -DCMAKE_BUILD_TYPE=Release 
        -DBUILD_JAVA=ON -DBUILD_NET=ON -DPACKAGE_SWIG_SOURCE_ALL=ON 
        -DBUILD_PYTHON=OFF -DBUILD_PYTHON_WHEEL=OFF -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl
        -DOPENSSL_USE_STATIC_LIBS=ON
        -DPYTHON3_EXECUTABLE="${{ steps.python3.outputs.python-path }}"
        -DROBOTRACONTEUR_VERSION_SEMVER="${{ env.ROBOTRACONTEUR_SEMVER }}"
        -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9
        ${{ env.CMAKE_CACHE_ARGS }}
        -S robotraconteur -B build2
    - name: build
      working-directory: build2
      run: |        
        cmake --build . --config Release -j 4
    - name: test
      working-directory: build2
      run: |
        ctest . -C Release --output-on-failure
    - name: python 3.7
      uses: ./robotraconteur/tools/actions/build_python_ver/osx
      with:
        python_version: 3.7
        arch: x64
    - name: python 3.8
      uses: ./robotraconteur/tools/actions/build_python_ver/osx
      with:
        python_version: 3.8
        arch: x64
    - name: python 3.9
      uses: ./robotraconteur/tools/actions/build_python_ver/osx
      with:
        python_version: 3.9
        arch: x64
    - name: python 3.10
      uses: ./robotraconteur/tools/actions/build_python_ver/osx
      with:
        python_version: "3.10"
        arch: x64
    - name: python 3.11
      uses: ./robotraconteur/tools/actions/build_python_ver/osx
      with:
        python_version: "3.11"
        arch: x64
    - name: python 3.12
      uses: ./robotraconteur/tools/actions/build_python_ver/osx
      with:
        python_version: "3.12"
        arch: x64
    - name: move out
      run: |
        cp build2/rrversion.txt build2/out/
        cp robotraconteur/LICENSE.txt build2/out/
        mv build2/out .
    - name: archive out
      uses: actions/upload-artifact@v3
      with:
        name: 'out-osx'
        path: out/*
    - name: build artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: 'build-artifacts-osx'
        path: build2/*
        retention-days: 2  
    
  build-matlab:

    runs-on: ubuntu-20.04
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: semver
      run: python3 robotraconteur/packaging/scripts/actions_semver.py --github-env
    - name: apt update
      run: sudo apt update
    - name: apt
      run: >
        sudo apt-get install zlib1g zlib1g-dev libusb-1.0-0 
        libusb-1.0-0-dev libdbus-1-3 libdbus-1-dev libbluetooth3 libbluetooth-dev 
        git cmake g++ make mono-devel libgtest-dev gcc-8 g++-8 -qq
    - name: Configure default compilers
      run: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100
    - name: Set up MATLAB
      uses: matlab-actions/setup-matlab@v1
      with:
        release: R2020b
    - name: vcpkg build
      uses: johnwason/vcpkg-action@v5
      id: vcpkg
      with:
        pkgs: ${{ env.VCPKG_PKGS }}
        triplet: x64-linux-matlab
        extra-args: --clean-after-build --overlay-triplets=${{ github.workspace }}/robotraconteur/tools/build_files/triplets
        cache-key: ubuntu-build-matlab
        token: ${{ github.token }}
    - name: cache-build
      if: startsWith(github.ref, 'refs/tags/v') != true
      id: cache-build
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ runner.os }}-matlab-build-main-ccache-${{ steps.vcpkg.outputs.vcpkg-cache-hash }}
    - name: cmake cache args
      id: cmake-cache-args
      if: startsWith(github.ref, 'refs/tags/v') != true
      run: >
        echo "CMAKE_CACHE_ARGS=-DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
        -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON" >> $GITHUB_ENV
    - name: configure
      run: >
        cmake -G "Unix Makefiles" 
        -DBUILD_GEN=ON  -DBUILD_TESTING=ON 
        -DBoost_USE_STATIC_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_MATLAB_MEX=ON
        -DROBOTRACONTEUR_VERSION_SEMVER="${{ env.ROBOTRACONTEUR_SEMVER }}"
        ${{ steps.vcpkg.outputs.vcpkg-cmake-config }}
        ${{ env.CMAKE_CACHE_ARGS }}
        -S robotraconteur -B build2
    - name: build
      working-directory: build2
      run: |
        cmake --build . --config Release -j 4
    - name: test
      working-directory: build2
      run: |
        ctest . -C Release --output-on-failure
    - name: matlab out tar
      run: >
         export RR_VER=`cat build2/rrversion.txt` 
         && tar -cf build2/out/RobotRaconteur-$RR_VER-MATLAB-glnxa64.tar.gz 
         --transform "flags=r;s|^build2/out/Matlab|RobotRaconteur-$RR_VER-MATLAB-glnxa64|" 
         --transform "flags=r;s|^robotraconteur|RobotRaconteur-$RR_VER-MATLAB-glnxa64|" 
         build2/out/Matlab robotraconteur/LICENSE.txt
    - name: move out
      run: |
        cp robotraconteur/LICENSE.txt build2/out/
        cp build2/rrversion.txt build2/out/
        mv build2/out .
    - name: archive out
      uses: actions/upload-artifact@v3
      with:
        name: 'out-matlab'
        path: out/*
    - name: build artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: 'build-artifacts-matlab'
        path: build2/*
        retention-days: 2

  build-conda-win:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: semver
      run: python robotraconteur/packaging/scripts/actions_semver.py --github-env
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        channels: conda-forge,robotraconteur
    - name: conda install
      run: >
        conda install git cmake boost-cpp python swig numpy pytest ninja pip vs2019_win-64 vs2015_runtime gtest gmock
    - name: configure
      run: >
        cmake -GNinja -DBUILD_GEN=ON -DBUILD_PYTHON3=ON -DCMAKE_BUILD_TYPE:STRING=Release
        -DROBOTRACONTEUR_VERSION_SEMVER="${{ env.ROBOTRACONTEUR_SEMVER }}"
        -S robotraconteur -B build2
      shell: cmd /C call {0}
    - name: build
      working-directory: build2
      run: cmake --build . --config Release -j 4
      shell: cmd /C call {0}
    - name: test
      working-directory: build2
      run: |
        ctest . -C Release --output-on-failure
      shell: cmd /C call {0}
  
  build-conda-linux:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: semver
      run: python3 robotraconteur/packaging/scripts/actions_semver.py --github-env
    - name: remove-swig      
      run: |
        sudo apt remove '^swig.*' -qq || true
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        channels: conda-forge,robotraconteur
    - name: conda install
      run: >
        conda install git cmake boost-cpp python swig numpy pytest pip dbus make zlib openssl libusb libbluetooth-headers compilers gcc_impl_linux-64 gtest gmock
    - name: printenv
      run: printenv    
    - name: configure
      run: >
        cmake -DBUILD_GEN=ON -DBUILD_PYTHON3=ON -DRR_NET_BUILD_NATIVE_ONLY=ON 
        -DCMAKE_BUILD_TYPE:STRING=Release -DPYTHON3_EXECUTABLE=$CONDA_PREFIX/bin/python
        -DROBOTRACONTEUR_VERSION_SEMVER="${{ env.ROBOTRACONTEUR_SEMVER }}"
        -S robotraconteur -B build2
    - name: build
      working-directory: build2
      run: cmake --build . --config Release -j 4
    - name: test
      working-directory: build2
      run: |
        ctest . -C Release --output-on-failure

  build-conda-osx:
    runs-on: macos-12
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: semver
      run: python3 robotraconteur/packaging/scripts/actions_semver.py --github-env
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        channels: conda-forge,robotraconteur
    - name: conda install
      run: >
        conda install git cmake boost-cpp python swig numpy pytest pip dbus clang clangxx compiler-rt openssl gtest gmock
    - name: configure
      run: >
        cmake -DBUILD_GEN=ON -DBUILD_PYTHON3=ON -DRR_NET_BUILD_NATIVE_ONLY=ON -DCMAKE_BUILD_TYPE:STRING=Release
        -DROBOTRACONTEUR_VERSION_SEMVER="${{ env.ROBOTRACONTEUR_SEMVER }}"
        -DPYTHON3_EXECUTABLE=$CONDA_PREFIX/bin/python -DOPENSSL_ROOT_DIR=$CONDA_PREFIX -S robotraconteur -B build2
    - name: build
      working-directory: build2
      run: cmake --build . --config Release -j 4
    - name: test
      working-directory: build2
      run: |
        ctest . -C Release --output-on-failure
  build-android:

    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        config:
        - android_abi: x86_64
          swig_args: -DSWIGWORDSIZE64
          openssl_arch: android-x86_64
        - android_abi: x86
          openssl_arch: android-x86
        - android_abi: arm64-v8a
          openssl_arch: android-arm64
          swig_args: -DSWIGWORDSIZE64
        - android_abi: armeabi-v7a
          openssl_arch: android-arm
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: semver
      run: python3 robotraconteur/packaging/scripts/actions_semver.py --github-env
    - name: apt update
      run: sudo apt update
    - name: apt
      run: >
        sudo apt-get install
        zlib1g zlib1g-dev libssl-dev libusb-1.0-0 
        libusb-1.0-0-dev libdbus-1-3 libdbus-1-dev libbluetooth3 libbluetooth-dev zlib1g zlib1g-dev 
        git cmake g++ make libboost-all-dev autoconf 
        automake libtool bison libpcre3-dev default-jdk default-jdk-headless default-jre 
        default-jre-headless libgtest-dev swig -qq
    - name: mkdir build2_host
      run: mkdir -p build2_host
    - name: configure_host
      working-directory: build2_host
      run: >
        cmake -G "Unix Makefiles" -DBUILD_GEN=ON
        -DBUILD_TESTING=OFF
        -DBoost_USE_STATIC_LIBS=OFF -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_C_FLAGS_RELEASE="-DNDEBUG -O0"
        -DCMAKE_CXX_FLAGS_RELEASE="-DNDEBUG -O0"
        ../robotraconteur
    - name: build_host
      working-directory: build2_host
      run: |
        cmake --build . --config Release -- -j 4
    - uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r25b
        add-to-path: false    
    - name: build_boost
      env:
        ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      run: |
        git clone --depth=1 https://github.com/johnwason/Boost-for-Android.git boost_android
        cd boost_android
        ./build-android.sh $ANDROID_NDK_HOME --arch=${{ matrix.config.android_abi }} --with-libraries=date_time,filesystem,system,regex,chrono,atomic,thread,random,program_options --boost=1.82.0 
    - name: build_openssl
      env:
        ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      run: |
        git clone --branch OpenSSL_1_1_1n https://github.com/openssl/openssl.git
        cd openssl
        export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH 
        ./Configure ${{ matrix.config.openssl_arch }} --prefix=$GITHUB_WORKSPACE/openssl_install_${{ matrix.config.android_abi }}
        make -j4
        make install_sw
    - name: mkdir build2
      run: mkdir -p build2
    - name: configure
      working-directory: build2
      env:
        ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      run: >
        cmake -G "Unix Makefiles" -DBUILD_GEN=OFF  -DBUILD_TESTING=OFF
        -DBoost_USE_STATIC_LIBS=ON -DCMAKE_BUILD_TYPE=Release 
        -DBUILD_JAVA=ON -DJAVA_HOME=/usr/lib/jvm/default-java 
        -DROBOTRACONTEUR_VERSION_SEMVER="${{ env.ROBOTRACONTEUR_SEMVER }}"
        ${{ env.CMAKE_CACHE_ARGS }}
        -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake 
        -DANDROID_PLATFORM=android-24
        -DBUILD_JAVA=ON 
        -DBOOST_ROOT:PATH=$GITHUB_WORKSPACE/boost_android/build/out/${{ matrix.config.android_abi }}/ 
        -DBoost_DEBUG=ON 
        -DBoost_VERBOSE=ON 
        -DBoost_USE_STATIC_LIBS=ON 
        -DBoost_COMPILER=-clang
        -DCMAKE_FIND_ROOT_PATH=$GITHUB_WORKSPACE 
        -DANDROID_ABI=${{ matrix.config.android_abi }} 
        -DOPENSSL_ROOT_DIR=$GITHUB_WORKSPACE/openssl_install_${{ matrix.config.android_abi }} 
        -DOPENSSL_USE_STATIC_LIBS=ON
        -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON 
        -DRobotRaconteurGen_EXECUTABLE=$GITHUB_WORKSPACE/build2_host/out/bin/RobotRaconteurGen 
        -DSWIG_JAVA_EXTRA_ARGS_OVERRIDE=${{ matrix.config.swig_args }} 
        -DANDROID_JAR=$ANDROID_HOME/platforms/android-24/Android.jar 
        ../robotraconteur
    - name: build
      env:
        ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      working-directory: build2
      run: |
        cmake --build . --config Release -- -j 4
    - name: move out
      run: |
        cp build2/rrversion.txt build2/out/
        cp robotraconteur/LICENSE.txt build2/out/
        mv build2/out .
    - name: archive out
      uses: actions/upload-artifact@v3
      with:
        name: 'out-android-${{ matrix.config.android_abi }}'
        path: out/*
    - name: build artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: 'build-artifacts-android-${{ matrix.config.android_abi }}'
        path: build2/*
        retention-days: 2
  build-ios:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: vcpkg build
      uses: johnwason/vcpkg-action@v5
      id: vcpkg
      with:
        pkgs: openssl ${{ env.VCPKG_PKGS }}
        triplet: arm64-ios-release
        extra-args: --clean-after-build --overlay-triplets=${{ github.workspace }}/robotraconteur/tools/build_files/triplets
        cache-key: ${{ runner.os }}-arm64-ios-vcpkg
        token: ${{ github.token }}
        revision: 2023.08.09
    - name: configure
      run: >
        cmake -DBUILD_TESTING=OFF -DBUILD_GEN=OFF -S robotraconteur -B build2
        -DCMAKE_SYSTEM_NAME=iOS -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 
        -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_SYSTEM_PROCESSOR=aarch64
        ${{ steps.vcpkg.outputs.vcpkg-cmake-config }}
    - name: build
      working-directory: build2
      run: |
        cmake --build . --config Release -j 4
    - name: move out
      run: |
        cp robotraconteur/LICENSE.txt build2/out/
        cp build2/rrversion.txt build2/out/
        mv build2/out .
    - name: archive out
      uses: actions/upload-artifact@v3
      with:
        name: 'out-ios-arm64'
        path: out/*
    - name: build artifacts
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: 'build-artifacts-ios-arm64'
        path: build2/*
        retention-days: 2 
  build-dist:
    needs:
    - build-ubuntu
    - build-win
    - build-osx
    - build-matlab
    - build-android
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - uses: nuget/setup-nuget@v1
    - name: Download CI artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts/main
    - name: collect source
      run: python robotraconteur/packaging/scripts/collect_source.py
    - name: collect wheels
      run: python robotraconteur/packaging/scripts/collect_wheels.py
    - name: collect matlab
      run: python robotraconteur/packaging/scripts/collect_matlab.py
    - name: build java zip
      run: python robotraconteur/packaging/scripts/build_java_zip.py
    - name: build nuget package
      run: python robotraconteur/packaging/scripts/build_nuget_package.py
    - name: build android package
      run: python robotraconteur/packaging/scripts/build_android_package.py
    - name: archive distfiles
      uses: actions/upload-artifact@v3
      with:
        name: 'distfiles'
        path: distfiles/*
    - name: make release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.BOT_GITHUB_TOKEN }}
        draft: true
        files: |
          distfiles/*
  check-formatting:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: pip
      run: sudo python3 -m pip install autopep8 cmakelang
    - name: clang-format-14
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 14 all
    - name: run formatting
      run: ./tools/formatting/run-all-formatting
      working-directory: robotraconteur
    - name: git diff for changes
      run: git diff --name-only --exit-code
      working-directory: robotraconteur
  clang-tidy:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: apt update
      run: sudo apt update
    - name: apt
      run: >
        sudo apt-get install 
        zlib1g zlib1g-dev libssl-dev libusb-1.0-0 
        libusb-1.0-0-dev libdbus-1-3 libdbus-1-dev libbluetooth3 libbluetooth-dev 
        git cmake g++ make libboost-all-dev autoconf 
        automake libtool bison libpcre3-dev curl libgtest-dev -qq
    - name: pip
      run: sudo python3 -m pip install autopep8 cmakelang
    - name: clang-tidy-14
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 14 all
    - name: mkdir build2
      run: mkdir -p build2
    - name: configure
      working-directory: build2
      run: >
        cmake -G "Unix Makefiles" -DBUILD_GEN=ON  -DBUILD_TESTING=OFF 
        -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON -DCMAKE_CXX_CLANG_TIDY=clang-tidy-14
        -DCMAKE_BUILD_TYPE=Debug
        ../robotraconteur
    - name: build
      working-directory: build2
      run: |
        cmake --build . --config Debug -- -j 4

  cppcheck:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        path: robotraconteur
    - name: apt update
      run: sudo apt update
    - name: apt
      run: >
        sudo apt-get install 
        zlib1g zlib1g-dev libssl-dev libusb-1.0-0 
        libusb-1.0-0-dev libdbus-1-3 libdbus-1-dev libbluetooth3 libbluetooth-dev 
        git cmake g++ make libboost-all-dev autoconf 
        automake libtool bison libpcre3-dev curl libgtest-dev cppcheck swig -qq
    - name: mkdir build2
      run: mkdir -p build2
    - name: configure
      working-directory: build2
      run: >
        cmake -G "Unix Makefiles" -DBUILD_GEN=ON -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=Debug
        -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON 
        -DCMAKE_CXX_CPPCHECK="/usr/bin/cppcheck;--enable=warning;--inconclusive;--force;--inline-suppr;-DBOOST_ASIO_MOVE_ARG(a)=;--error-exitcode=1;--std=c++03;RobotRaconteurCore;RobotRaconteurGen"
        ../robotraconteur
    - name: build
      working-directory: build2
      run: |
        cmake --build . --config Debug -- -j 4

  codecov:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: apt update
      run: sudo apt update
    - name: apt
      run: >
        sudo apt-get install 
        zlib1g zlib1g-dev libssl-dev libusb-1.0-0 
        libusb-1.0-0-dev libdbus-1-3 libdbus-1-dev libbluetooth3 libbluetooth-dev 
        git cmake g++ make libboost-all-dev autoconf 
        automake libtool bison libpcre3-dev curl libgtest-dev gcovr swig 
        python3-dev python3-numpy python3-setuptools python3-wheel python3-pytest -qq
    - name: mkdir build
      run: mkdir -p build
    - name: configure
      working-directory: build
      run: >
        cmake -G "Unix Makefiles" -DBUILD_GEN=ON -DBUILD_TESTING=ON -DBUILD_PYTHON3=ON
        -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="--coverage"
        -DCMAKE_SHARED_LINKER_FLAGS="--coverage"
        -DCMAKE_EXE_LINKER_FLAGS="--coverage"
        -DCMAKE_CXX_FLAGS_RELEASE="-g"
        -DCMAKE_C_FLAGS_RELEASE="-g"
        -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON ..
    - name: build
      working-directory: build
      run: |
        cmake --build . --config Release -- -j 4
    - name: ctest
      working-directory: build
      run: |
        ctest -C Release --output-on-failure
    - name: gcovr
      run: |
        mkdir -p build/codecov
        gcovr -r . --config=test/codecov/gcovr/gcovr.cfg --html-details -o build/codecov/codecov.html build
        gcovr -r . --config=test/codecov/gcovr/gcovr.cfg -s build
    - name: upload codecov
      uses: actions/upload-artifact@v2
      with:
        name: codecov
        path: build/codecov

  vcpkg-test-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: vcpkg build
        uses: johnwason/vcpkg-action@v5
        id: vcpkg
        with:
          pkgs: robotraconteur
          triplet: x64-windows-release
          extra-args: --clean-after-build --overlay-ports=${{ github.workspace }}/tools/build_files/ports --no-binarycaching
          cache-key: vcpkg-test-win
          token: ${{ github.token }}
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
      - name: build-disttest-cpp
        working-directory: test/dist/cpp
        run: |
          cmake -G "NMake Makefiles" ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} -DCMAKE_BUILD_TYPE=Release -S . -B build
          cmake --build build --config Release -j 4
      - name: run-build-disttest-cpp
        working-directory: test/dist/cpp/build
        run: |
          .\disttest_cpp.exe

  vcpkg-test-linux:
    runs-on: ubuntu-latest
    env:
      VCPKG_MAX_CONCURRENCY: 2
    steps:
      - uses: actions/checkout@v2
      - name: apt update
        run: sudo apt update
      - name: apt
        run: >
          sudo apt-get install zlib1g zlib1g-dev libssl-dev libusb-1.0-0
          libusb-1.0-0-dev libdbus-1-3 libdbus-1-dev libbluetooth3 libbluetooth-dev zlib1g zlib1g-dev 
          git cmake g++ make curl libgtest-dev -qq
      - name: vcpkg build
        uses: johnwason/vcpkg-action@v5
        id: vcpkg
        with:
          pkgs: robotraconteur
          triplet: x64-linux-release
          extra-args: --clean-after-build --overlay-ports=${{ github.workspace }}/tools/build_files/ports --no-binarycaching
          cache-key: vcpkg-test-linux
          token: ${{ github.token }}
      - name: build-disttest-cpp
        working-directory: test/dist/cpp
        run: |
          cmake  ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} -DCMAKE_BUILD_TYPE=Release -S . -B build
          cmake --build build --config Release -j 4
      - name: run-build-disttest-cpp
        working-directory: test/dist/cpp/build
        run: |
          ./disttest_cpp
      # Archive all logs
      - name: Archive all logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: logs
          path: |
            **/*.log

  vcpkg-test-osx:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: vcpkg build
        uses: johnwason/vcpkg-action@v5
        id: vcpkg
        with:
          pkgs: robotraconteur
          triplet: x64-osx-release
          extra-args: --clean-after-build --overlay-ports=${{ github.workspace }}/tools/build_files/ports --no-binarycaching
          cache-key: vcpkg-test-osx
          token: ${{ github.token }}
      - name: build-disttest-cpp
        working-directory: test/dist/cpp
        run: |
          cmake  ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=11 -S . -B build
          cmake --build build --config Release -j 4
      - name: run-build-disttest-cpp
        working-directory: test/dist/cpp/build
        run: |
          ./disttest_cpp
      
  distfiles-test-win:
    needs:
      - build-dist
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - arch: x64
            wheel_arch: win_amd64
          - arch: x86
            wheel_arch: win32
    steps:
      - uses: actions/checkout@v2
        with:
          path: robotraconteur
      - name: Download distfiles
        uses: actions/download-artifact@v2
        with:
          path: artifacts/distfiles
          name: distfiles
      - name: .net test
        uses: ./robotraconteur/test/dist/net/action/win
        with:
          arch: ${{ matrix.config.arch }}
      - uses: ./robotraconteur/test/dist/python/action/win
        with:
          python_version: 3.7
          arch: ${{ matrix.config.arch }}
          wheel_filename: RobotRaconteur-*-cp37-cp37m-${{ matrix.config.wheel_arch }}.whl
      - uses: ./robotraconteur/test/dist/python/action/win
        with:
          python_version: 3.8
          arch: ${{ matrix.config.arch }}
          wheel_filename: RobotRaconteur-*-cp38-cp38-${{ matrix.config.wheel_arch }}.whl
      - uses: ./robotraconteur/test/dist/python/action/win
        with:
          python_version: 3.9
          arch: ${{ matrix.config.arch }}
          wheel_filename: RobotRaconteur-*-cp39-cp39-${{ matrix.config.wheel_arch }}.whl
      - uses: ./robotraconteur/test/dist/python/action/win
        with:
          python_version: "3.10"
          arch: ${{ matrix.config.arch }}
          wheel_filename: RobotRaconteur-*-cp310-cp310-${{ matrix.config.wheel_arch }}.whl
      - uses: ./robotraconteur/test/dist/python/action/win
        with:
          python_version: "3.11"
          arch: ${{ matrix.config.arch }}
          wheel_filename: RobotRaconteur-*-cp311-cp311-${{ matrix.config.wheel_arch }}.whl
  distfiles-test-linux:
    needs:
      - build-dist
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          path: robotraconteur
      - name: apt
        run: |
          sudo apt-get update
          sudo apt-get install -y libboost-all-dev libssl-dev zlib1g-dev -y
      - name: Download distfiles
        uses: actions/download-artifact@v2
        with:
          path: artifacts/distfiles
          name: distfiles
      - name: Download distfiles out-ubuntu
        uses: actions/download-artifact@v2
        with:
          path: artifacts/out-ubuntu
          name: out-ubuntu-22.04
      - uses: ./robotraconteur/test/dist/python/action/linux
        with:
          python_version: 3.7
          wheel_filename: RobotRaconteur-*-cp37-cp37m-manylinux*x86_64.whl
      - uses: ./robotraconteur/test/dist/python/action/linux
        with:
          python_version: 3.8
          wheel_filename: RobotRaconteur-*-cp38-cp38-manylinux*x86_64.whl
      - uses: ./robotraconteur/test/dist/python/action/linux
        with:
          python_version: 3.9
          wheel_filename: RobotRaconteur-*-cp39-cp39-manylinux*x86_64.whl
      - uses: ./robotraconteur/test/dist/python/action/linux
        with:
          python_version: "3.10"
          wheel_filename: RobotRaconteur-*-cp310-cp310-manylinux*x86_64.whl
      - uses: ./robotraconteur/test/dist/python/action/linux
        with:
          python_version: "3.11"
          wheel_filename: RobotRaconteur-*-cp311-cp311-manylinux*x86_64.whl
      - name: .net test
        uses: ./robotraconteur/test/dist/net/action/linux

  distfiles-test-osx:
    needs:
      - build-dist
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: robotraconteur
      - name: Download distfiles
        uses: actions/download-artifact@v2
        with:
          path: artifacts/distfiles
          name: distfiles
      - name: Download distfiles out-osx
        uses: actions/download-artifact@v2
        with:
          path: artifacts/out-osx
          name: out-osx
      - uses: ./robotraconteur/test/dist/python/action/osx
        with:
          python_version: 3.7
          wheel_filename: RobotRaconteur-*-cp37-cp37m-macosx*x86_64.whl
      - uses: ./robotraconteur/test/dist/python/action/osx
        with:
          python_version: 3.8
          wheel_filename: RobotRaconteur-*-cp38-cp38-macosx*x86_64.whl
      - uses: ./robotraconteur/test/dist/python/action/osx
        with:
          python_version: 3.9
          wheel_filename: RobotRaconteur-*-cp39-cp39-macosx*x86_64.whl
      - uses: ./robotraconteur/test/dist/python/action/osx
        with:
          python_version: "3.10"
          wheel_filename: RobotRaconteur-*-cp310-cp310-macosx*x86_64.whl
      - uses: ./robotraconteur/test/dist/python/action/osx
        with:
          python_version: "3.11"
          wheel_filename: RobotRaconteur-*-cp311-cp311-macosx*x86_64.whl
      - name: .net test
        uses: ./robotraconteur/test/dist/net/action/osx
          
        