/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.robotraconteur;

public class vectorptr_memberdefinition extends java.util.AbstractList<MemberDefinition> implements java.util.RandomAccess {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected vectorptr_memberdefinition(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(vectorptr_memberdefinition obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RobotRaconteurJavaJNI.delete_vectorptr_memberdefinition(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

public MemberDefinition doGet(int i)
{
	return MemberDefinitionUtil.swigCast(_doGet(i));
}

  public vectorptr_memberdefinition(MemberDefinition[] initialElements) {
    this();
    reserve(initialElements.length);

    for (MemberDefinition element : initialElements) {
      add(element);
    }
  }

  public vectorptr_memberdefinition(Iterable<MemberDefinition> initialElements) {
    this();
    for (MemberDefinition element : initialElements) {
      add(element);
    }
  }

  public MemberDefinition get(int index) {
    return doGet(index);
  }

  public MemberDefinition set(int index, MemberDefinition e) {
    return doSet(index, e);
  }

  public boolean add(MemberDefinition e) {
    modCount++;
    doAdd(e);
    return true;
  }

  public void add(int index, MemberDefinition e) {
    modCount++;
    doAdd(index, e);
  }

  public MemberDefinition remove(int index) {
    modCount++;
    return doRemove(index);
  }

  protected void removeRange(int fromIndex, int toIndex) {
    modCount++;
    doRemoveRange(fromIndex, toIndex);
  }

  public int size() {
    return doSize();
  }

  public vectorptr_memberdefinition() {
    this(RobotRaconteurJavaJNI.new_vectorptr_memberdefinition__SWIG_0(), true);
  }

  public vectorptr_memberdefinition(vectorptr_memberdefinition other) {
    this(RobotRaconteurJavaJNI.new_vectorptr_memberdefinition__SWIG_1(vectorptr_memberdefinition.getCPtr(other), other), true);
  }

  public long capacity() {
    return RobotRaconteurJavaJNI.vectorptr_memberdefinition_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    RobotRaconteurJavaJNI.vectorptr_memberdefinition_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return RobotRaconteurJavaJNI.vectorptr_memberdefinition_isEmpty(swigCPtr, this);
  }

  public void clear() {
    RobotRaconteurJavaJNI.vectorptr_memberdefinition_clear(swigCPtr, this);
  }

  public vectorptr_memberdefinition(int count, MemberDefinition value) {
    this(RobotRaconteurJavaJNI.new_vectorptr_memberdefinition__SWIG_2(count, MemberDefinition.getCPtr(value), value), true);
  }

  private int doSize() {
    return RobotRaconteurJavaJNI.vectorptr_memberdefinition_doSize(swigCPtr, this);
  }

  private void doAdd(MemberDefinition x) {
    RobotRaconteurJavaJNI.vectorptr_memberdefinition_doAdd__SWIG_0(swigCPtr, this, MemberDefinition.getCPtr(x), x);
  }

  private void doAdd(int index, MemberDefinition x) {
    RobotRaconteurJavaJNI.vectorptr_memberdefinition_doAdd__SWIG_1(swigCPtr, this, index, MemberDefinition.getCPtr(x), x);
  }

  private MemberDefinition doRemove(int index) {
    long cPtr = RobotRaconteurJavaJNI.vectorptr_memberdefinition_doRemove(swigCPtr, this, index);
    return (cPtr == 0) ? null : new MemberDefinition(cPtr, true);
  }

  private MemberDefinition _doGet(int index) {
    long cPtr = RobotRaconteurJavaJNI.vectorptr_memberdefinition__doGet(swigCPtr, this, index);
    return (cPtr == 0) ? null : new MemberDefinition(cPtr, true);
  }

  private MemberDefinition doSet(int index, MemberDefinition val) {
    long cPtr = RobotRaconteurJavaJNI.vectorptr_memberdefinition_doSet(swigCPtr, this, index, MemberDefinition.getCPtr(val), val);
    return (cPtr == 0) ? null : new MemberDefinition(cPtr, true);
  }

  private void doRemoveRange(int fromIndex, int toIndex) {
    RobotRaconteurJavaJNI.vectorptr_memberdefinition_doRemoveRange(swigCPtr, this, fromIndex, toIndex);
  }

}
