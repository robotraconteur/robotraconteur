/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.robotraconteur;

public class WrappedServiceSubscriptionManager {
  private transient long swigCPtr;
  private transient boolean swigCMemOwn;

  protected WrappedServiceSubscriptionManager(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(WrappedServiceSubscriptionManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwn = own;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RobotRaconteurJavaJNI.delete_WrappedServiceSubscriptionManager(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public WrappedServiceSubscriptionManager() {
    this(RobotRaconteurJavaJNI.new_WrappedServiceSubscriptionManager__SWIG_0(), true);
  }

  public WrappedServiceSubscriptionManager(RobotRaconteurNode node) {
    this(RobotRaconteurJavaJNI.new_WrappedServiceSubscriptionManager__SWIG_1(RobotRaconteurNode.getCPtr(node), node), true);
  }

  public WrappedServiceSubscriptionManager(vector_wrappedservicesubscriptionmanagerdetails details) {
    this(RobotRaconteurJavaJNI.new_WrappedServiceSubscriptionManager__SWIG_2(vector_wrappedservicesubscriptionmanagerdetails.getCPtr(details), details), true);
  }

  public WrappedServiceSubscriptionManager(vector_wrappedservicesubscriptionmanagerdetails details, RobotRaconteurNode node) {
    this(RobotRaconteurJavaJNI.new_WrappedServiceSubscriptionManager__SWIG_3(vector_wrappedservicesubscriptionmanagerdetails.getCPtr(details), details, RobotRaconteurNode.getCPtr(node), node), true);
  }

  public void addSubscription(WrappedServiceSubscriptionManagerDetails details) {
    RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_addSubscription(swigCPtr, this, WrappedServiceSubscriptionManagerDetails.getCPtr(details), details);
  }

  public void removeSubscription(String name, boolean close) {
    RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_removeSubscription__SWIG_0(swigCPtr, this, name, close);
  }

  public void removeSubscription(String name) {
    RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_removeSubscription__SWIG_1(swigCPtr, this, name);
  }

  public void enableSubscription(String name) {
    RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_enableSubscription(swigCPtr, this, name);
  }

  public void disableSubscription(String name, boolean close) {
    RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_disableSubscription__SWIG_0(swigCPtr, this, name, close);
  }

  public void disableSubscription(String name) {
    RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_disableSubscription__SWIG_1(swigCPtr, this, name);
  }

  public WrappedServiceSubscription getSubscription(String name, boolean force_create) {
    long cPtr = RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_getSubscription__SWIG_0(swigCPtr, this, name, force_create);
    return (cPtr == 0) ? null : new WrappedServiceSubscription(cPtr, true);
  }

  public WrappedServiceSubscription getSubscription(String name) {
    long cPtr = RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_getSubscription__SWIG_1(swigCPtr, this, name);
    return (cPtr == 0) ? null : new WrappedServiceSubscription(cPtr, true);
  }

  public boolean isConnected(String name) {
    return RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_isConnected(swigCPtr, this, name);
  }

  public boolean isEnabled(String name) {
    return RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_isEnabled(swigCPtr, this, name);
  }

  public void close(boolean close_subscriptions) {
    RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_close__SWIG_0(swigCPtr, this, close_subscriptions);
  }

  public void close() {
    RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_close__SWIG_1(swigCPtr, this);
  }

  public vectorstring getSubscriptionNames() {
    return new vectorstring(RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_getSubscriptionNames(swigCPtr, this), true);
  }

  public vector_wrappedservicesubscriptionmanagerdetails getSubscriptionDetails() {
    return new vector_wrappedservicesubscriptionmanagerdetails(RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_getSubscriptionDetails(swigCPtr, this), true);
  }

  public RobotRaconteurNode getNode() {
    long cPtr = RobotRaconteurJavaJNI.WrappedServiceSubscriptionManager_getNode(swigCPtr, this);
    return (cPtr == 0) ? null : new RobotRaconteurNode(cPtr, true);
  }

}
