/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.robotraconteur;

public class vectorserviceinfo2wrapped extends java.util.AbstractList<ServiceInfo2Wrapped> implements java.util.RandomAccess {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected vectorserviceinfo2wrapped(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(vectorserviceinfo2wrapped obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RobotRaconteurJavaJNI.delete_vectorserviceinfo2wrapped(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public vectorserviceinfo2wrapped(ServiceInfo2Wrapped[] initialElements) {
    this();
    reserve(initialElements.length);

    for (ServiceInfo2Wrapped element : initialElements) {
      add(element);
    }
  }

  public vectorserviceinfo2wrapped(Iterable<ServiceInfo2Wrapped> initialElements) {
    this();
    for (ServiceInfo2Wrapped element : initialElements) {
      add(element);
    }
  }

  public ServiceInfo2Wrapped get(int index) {
    return doGet(index);
  }

  public ServiceInfo2Wrapped set(int index, ServiceInfo2Wrapped e) {
    return doSet(index, e);
  }

  public boolean add(ServiceInfo2Wrapped e) {
    modCount++;
    doAdd(e);
    return true;
  }

  public void add(int index, ServiceInfo2Wrapped e) {
    modCount++;
    doAdd(index, e);
  }

  public ServiceInfo2Wrapped remove(int index) {
    modCount++;
    return doRemove(index);
  }

  protected void removeRange(int fromIndex, int toIndex) {
    modCount++;
    doRemoveRange(fromIndex, toIndex);
  }

  public int size() {
    return doSize();
  }

  public vectorserviceinfo2wrapped() {
    this(RobotRaconteurJavaJNI.new_vectorserviceinfo2wrapped__SWIG_0(), true);
  }

  public vectorserviceinfo2wrapped(vectorserviceinfo2wrapped other) {
    this(RobotRaconteurJavaJNI.new_vectorserviceinfo2wrapped__SWIG_1(vectorserviceinfo2wrapped.getCPtr(other), other), true);
  }

  public long capacity() {
    return RobotRaconteurJavaJNI.vectorserviceinfo2wrapped_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    RobotRaconteurJavaJNI.vectorserviceinfo2wrapped_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return RobotRaconteurJavaJNI.vectorserviceinfo2wrapped_isEmpty(swigCPtr, this);
  }

  public void clear() {
    RobotRaconteurJavaJNI.vectorserviceinfo2wrapped_clear(swigCPtr, this);
  }

  public vectorserviceinfo2wrapped(int count, ServiceInfo2Wrapped value) {
    this(RobotRaconteurJavaJNI.new_vectorserviceinfo2wrapped__SWIG_2(count, ServiceInfo2Wrapped.getCPtr(value), value), true);
  }

  private int doSize() {
    return RobotRaconteurJavaJNI.vectorserviceinfo2wrapped_doSize(swigCPtr, this);
  }

  private void doAdd(ServiceInfo2Wrapped x) {
    RobotRaconteurJavaJNI.vectorserviceinfo2wrapped_doAdd__SWIG_0(swigCPtr, this, ServiceInfo2Wrapped.getCPtr(x), x);
  }

  private void doAdd(int index, ServiceInfo2Wrapped x) {
    RobotRaconteurJavaJNI.vectorserviceinfo2wrapped_doAdd__SWIG_1(swigCPtr, this, index, ServiceInfo2Wrapped.getCPtr(x), x);
  }

  private ServiceInfo2Wrapped doRemove(int index) {
    return new ServiceInfo2Wrapped(RobotRaconteurJavaJNI.vectorserviceinfo2wrapped_doRemove(swigCPtr, this, index), true);
  }

  private ServiceInfo2Wrapped doGet(int index) {
    return new ServiceInfo2Wrapped(RobotRaconteurJavaJNI.vectorserviceinfo2wrapped_doGet(swigCPtr, this, index), false);
  }

  private ServiceInfo2Wrapped doSet(int index, ServiceInfo2Wrapped val) {
    return new ServiceInfo2Wrapped(RobotRaconteurJavaJNI.vectorserviceinfo2wrapped_doSet(swigCPtr, this, index, ServiceInfo2Wrapped.getCPtr(val), val), true);
  }

  private void doRemoveRange(int fromIndex, int toIndex) {
    RobotRaconteurJavaJNI.vectorserviceinfo2wrapped_doRemoveRange(swigCPtr, this, fromIndex, toIndex);
  }

}
