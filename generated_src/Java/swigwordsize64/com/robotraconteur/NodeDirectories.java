/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.robotraconteur;

public class NodeDirectories {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected NodeDirectories(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NodeDirectories obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(NodeDirectories obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RobotRaconteurJavaJNI.delete_NodeDirectories(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setSystem_data_dir(FilesystemPath value) {
    RobotRaconteurJavaJNI.NodeDirectories_system_data_dir_set(swigCPtr, this, FilesystemPath.getCPtr(value), value);
  }

  public FilesystemPath getSystem_data_dir() {
    long cPtr = RobotRaconteurJavaJNI.NodeDirectories_system_data_dir_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FilesystemPath(cPtr, false);
  }

  public void setSystem_config_dir(FilesystemPath value) {
    RobotRaconteurJavaJNI.NodeDirectories_system_config_dir_set(swigCPtr, this, FilesystemPath.getCPtr(value), value);
  }

  public FilesystemPath getSystem_config_dir() {
    long cPtr = RobotRaconteurJavaJNI.NodeDirectories_system_config_dir_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FilesystemPath(cPtr, false);
  }

  public void setSystem_state_dir(FilesystemPath value) {
    RobotRaconteurJavaJNI.NodeDirectories_system_state_dir_set(swigCPtr, this, FilesystemPath.getCPtr(value), value);
  }

  public FilesystemPath getSystem_state_dir() {
    long cPtr = RobotRaconteurJavaJNI.NodeDirectories_system_state_dir_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FilesystemPath(cPtr, false);
  }

  public void setSystem_cache_dir(FilesystemPath value) {
    RobotRaconteurJavaJNI.NodeDirectories_system_cache_dir_set(swigCPtr, this, FilesystemPath.getCPtr(value), value);
  }

  public FilesystemPath getSystem_cache_dir() {
    long cPtr = RobotRaconteurJavaJNI.NodeDirectories_system_cache_dir_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FilesystemPath(cPtr, false);
  }

  public void setSystem_run_dir(FilesystemPath value) {
    RobotRaconteurJavaJNI.NodeDirectories_system_run_dir_set(swigCPtr, this, FilesystemPath.getCPtr(value), value);
  }

  public FilesystemPath getSystem_run_dir() {
    long cPtr = RobotRaconteurJavaJNI.NodeDirectories_system_run_dir_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FilesystemPath(cPtr, false);
  }

  public void setUser_data_dir(FilesystemPath value) {
    RobotRaconteurJavaJNI.NodeDirectories_user_data_dir_set(swigCPtr, this, FilesystemPath.getCPtr(value), value);
  }

  public FilesystemPath getUser_data_dir() {
    long cPtr = RobotRaconteurJavaJNI.NodeDirectories_user_data_dir_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FilesystemPath(cPtr, false);
  }

  public void setUser_config_dir(FilesystemPath value) {
    RobotRaconteurJavaJNI.NodeDirectories_user_config_dir_set(swigCPtr, this, FilesystemPath.getCPtr(value), value);
  }

  public FilesystemPath getUser_config_dir() {
    long cPtr = RobotRaconteurJavaJNI.NodeDirectories_user_config_dir_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FilesystemPath(cPtr, false);
  }

  public void setUser_state_dir(FilesystemPath value) {
    RobotRaconteurJavaJNI.NodeDirectories_user_state_dir_set(swigCPtr, this, FilesystemPath.getCPtr(value), value);
  }

  public FilesystemPath getUser_state_dir() {
    long cPtr = RobotRaconteurJavaJNI.NodeDirectories_user_state_dir_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FilesystemPath(cPtr, false);
  }

  public void setUser_cache_dir(FilesystemPath value) {
    RobotRaconteurJavaJNI.NodeDirectories_user_cache_dir_set(swigCPtr, this, FilesystemPath.getCPtr(value), value);
  }

  public FilesystemPath getUser_cache_dir() {
    long cPtr = RobotRaconteurJavaJNI.NodeDirectories_user_cache_dir_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FilesystemPath(cPtr, false);
  }

  public void setUser_run_dir(FilesystemPath value) {
    RobotRaconteurJavaJNI.NodeDirectories_user_run_dir_set(swigCPtr, this, FilesystemPath.getCPtr(value), value);
  }

  public FilesystemPath getUser_run_dir() {
    long cPtr = RobotRaconteurJavaJNI.NodeDirectories_user_run_dir_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FilesystemPath(cPtr, false);
  }

  public NodeDirectories() {
    this(RobotRaconteurJavaJNI.new_NodeDirectories(), true);
  }

}
