/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.robotraconteur;

public class WrappedArrayMemoryClientUtil {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected WrappedArrayMemoryClientUtil(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(WrappedArrayMemoryClientUtil obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RobotRaconteurJavaJNI.delete_WrappedArrayMemoryClientUtil(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static RRBaseArray read(ArrayMemoryBase mem, long memorypos, long count) {
    long cPtr = RobotRaconteurJavaJNI.WrappedArrayMemoryClientUtil_read(ArrayMemoryBase.getCPtr(mem), mem, memorypos, count);
    return (cPtr == 0) ? null : new RRBaseArray(cPtr, true);
  }

  public static void write(ArrayMemoryBase mem, long memorypos, RRBaseArray buffer, long bufferpos, long count) {
    RobotRaconteurJavaJNI.WrappedArrayMemoryClientUtil_write(ArrayMemoryBase.getCPtr(mem), mem, memorypos, RRBaseArray.getCPtr(buffer), buffer, bufferpos, count);
  }

  public static MemberDefinition_Direction direction(ArrayMemoryBase mem) {
    return MemberDefinition_Direction.swigToEnum(RobotRaconteurJavaJNI.WrappedArrayMemoryClientUtil_direction(ArrayMemoryBase.getCPtr(mem), mem));
  }

  public WrappedArrayMemoryClientUtil() {
    this(RobotRaconteurJavaJNI.new_WrappedArrayMemoryClientUtil(), true);
  }

}
